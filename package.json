{
  "name": "metabob",
  "displayName": "Metabob: Debug and Refactor with AI",
  "description": "Generative AI to automate debugging and refactoring Python code",
  "version": "1.0.13",
  "icon": "media/extension-icon.png",
  "repository": {
    "url": "https://github.com/MetabobProject/metabob-vscode",
    "type": "git"
  },
  "publisher": "Metabob",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Linters",
    "Programming Languages",
    "Snippets",
    "Debuggers",
    "Data Science",
    "Machine Learning",
    "Other"
  ],
  "keywords": [
    "debugger",
    "debugging",
    "gpt",
    "openai",
    "generative ai",
    "code generation",
    "generator",
    "copilot",
    "linter",
    "lint",
    "code",
    "refactor",
    "metabob"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./build/ext-src/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "metabob-webview",
          "title": "Metabob Extension",
          "icon": "./media/extension-icon.png"
        }
      ]
    },
    "views": {
      "metabob-webview": [
        {
          "type": "webview",
          "id": "recommendation-panel-webview",
          "name": "Recommendation",
          "icon": "./media/extension-icon.png"
        }
      ]
    },
    "commands": [
      {
        "command": "metabob.analyzeDocument",
        "title": "Analyze Document",
        "category": "Metabob"
      },
      {
        "command": "metabob.discardSuggestion",
        "title": "Discard Suggestion",
        "category": "Metabob"
      },
      {
        "command": "metabob.endorseSuggestion",
        "title": "Endorse Suggestion",
        "category": "Metabob"
      },
      {
        "command": "metabob.fixSuggestion",
        "title": "Fix Suggestion",
        "category": "Metabob"
      },
      {
        "command": "metabob.showDetailSuggestion",
        "title": "Show Detail",
        "category": "Metabob"
      },
      {
        "command": "metabob.focusRecommend",
        "title": "Focus Recommendation Panel",
        "category": "Metabob"
      },
      {
        "command": "metabob.refreshExtension",
        "title": "Refresh Extension",
        "category": "Metabob"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "metabob.discardSuggestion",
          "when": "false"
        },
        {
          "command": "metabob.endorseSuggestion",
          "when": "false"
        },
        {
          "command": "metabob.focusRecommend",
          "when": "false"
        },
        {
          "command": "metabob.fixSuggestion",
          "when": "false"
        },
        {
          "command": "metabob.showDetailSuggestion",
          "when": "false"
        }
      ]
    },
    "configuration": {
      "title": "Metabob Extension configuration",
      "properties": {
        "metabob.analyzeDocumentOnSave": {
          "description": "Analyze Document On Save",
          "type": "boolean",
          "default": true,
          "category": "Metabob"
        },
        "metabob.backendSelection": {
          "type": "string",
          "enum": [
            "metabob",
            "openai/chatgpt"
          ],
          "default": "metabob",
          "description": "Select the backend for generating recommendations and suggestions"
        },
        "metabob.apiKey": {
          "description": "API key to use for authentication",
          "type": "string",
          "default": "",
          "category": "Metabob",
          "when": "config.metabob.backendSelection === 'metabob'"
        },
        "metabob.baseURl": {
          "description": "Endpoint of the backend service",
          "type": "string",
          "default": "",
          "category": "Metabob",
          "when": "config.metabob.backendSelection === 'metabob'"
        },
        "metabob.chatgptToken": {
          "type": "string",
          "default": "",
          "description": "The API token to use for authentication with the openai/chatgpt backend",
          "when": "config.metabob.backendSelection == 'openai/chatgpt'"
        }
      }
    }
  },
  "scripts": {
    "watch": "npm run watch:nodemon",
    "watch:nodemon": "nodemon",
    "lint": "eslint src --ext ts",
    "package": "vsce package --no-yarn",
    "vscode:prepublish": "node ./scripts/build-non-split.js && tsc -p tsconfig.extension.json",
    "start": "react-scripts start",
    "build": "node ./scripts/build-non-split.js && tsc -p tsconfig.extension.json"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/jest": "^23.3.13",
    "@types/lodash": "^4.14.191",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-syntax-highlighter": "^15.5.6",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^4.9.0",
    "@typescript-eslint/parser": "^4.9.0",
    "css-loader": "^5.0.1",
    "eslint": "^7.15.0",
    "eslint-config-prettier": "^8.7.0",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.8.4",
    "react-scripts": "^5.0.1",
    "rewire": "^6.0.0",
    "style-loader": "^2.0.0",
    "ts-loader": "^8.0.15",
    "typescript": "^4.1.2",
    "vscode-test": "^1.4.1",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "@emotion/react": "^11.11.3",
    "@emotion/styled": "^11.11.0",
    "@mui/material": "^5.15.6",
    "axios": "^1.6.0",
    "form-data": "^4.0.0",
    "lodash": "^4.17.21",
    "onchange": "^7.1.0",
    "openai": "^3.2.1",
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "react-markdown": "^8.0.7",
    "react-syntax-highlighter": "^15.5.0",
    "react-use-pagination": "^2.0.1",
    "recoil": "^0.7.7",
    "remark-gfm": "^3.0.1",
    "rusty-result-ts": "^0.1.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
