import { AnalyzeState } from '../types';

export const IdentifiedProblems: AnalyzeState = {
  'example/example.py': [
    {
      isValid: true,
      problems: [
        {
          id: '1',
          discarded: false,
          endorsed: false,
          isViewed: false,
          path: 'example.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '2',
          discarded: false,
          endorsed: false,
          isViewed: false,
          path: 'example.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '3',
          discarded: false,
          endorsed: false,
          isViewed: false,
          path: 'example.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '4',
          discarded: false,
          endorsed: false,
          isViewed: true,
          path: 'example.py',
          startLine: 2,
          endLine: 3,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '5',
          discarded: true,
          endorsed: true,
          isViewed: true,
          path: 'example.py',
          startLine: 2,
          endLine: 3,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '6',
          discarded: true,
          endorsed: true,
          isViewed: true,
          path: 'example.py',
          startLine: 0,
          endLine: 0,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
      ],
    },
    {
      isValid: false,
      problems: [
        {
          id: '7',
          discarded: false,
          endorsed: false,
          isViewed: false,
          path: 'example.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '8',
          discarded: true,
          endorsed: true,
          isViewed: true,
          path: 'example.py',
          startLine: 0,
          endLine: 0,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
      ],
    },
  ],
  'example/example2.py': [
    {
      isValid: false,
      problems: [
        {
          id: '9',
          discarded: false,
          endorsed: true,
          isViewed: true,
          path: 'example2.py',
          startLine: 0,
          endLine: 0,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
        {
          id: '10',
          discarded: false,
          endorsed: true,
          isViewed: false,
          path: 'example2.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
      ],
    },
  ],
  'example/example3.py': [
    {
      isValid: true,
      problems: [
        {
          id: '11',
          discarded: false,
          endorsed: true,
          isViewed: true,
          path: 'example3.py',
          startLine: 2,
          endLine: 2,
          category: 'Logic',
          summary: 'Logic Error',
          description: 'Logic Error',
          severity: 'HIGH',
        },
      ],
    },
  ],
  'example/example4.py': [],
};
